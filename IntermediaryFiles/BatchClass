public class AnnualRollupUsage implements Database.Batchable<sObject>, Database.Stateful{
	// instance member to retain state across transactions
    public Integer recordsProcessed = 0;
    
    public Database.QueryLocator start(Database.BatchableContext bc) {
        return Database.getQueryLocator(
            'SELECT Id, Name, Account__r.Name, (SELECT Id, date__c, frequency__c, usagetype__c, count__c FROM Usages__r) FROM Legal_Entity__c' +
            'WHERE Account__r.Billing_Period__c = \'Annually\'' +
            'AND Account__r.Account_Stage__c IN (\'Live\',\'Churning\')' +
            'AND Account__r.RecordTypeId IN (\'0121H000000zwC5QAI\',\'0121H000000zwCFQAY\')'                                             
        );
    }
    
    public void execute(Database.BatchableContext bc, List<Legal_Entity__c> records){
        List<Legal_Entity__c> legalEntsToBeUpdated = new List<Legal_Entity__c>();
        for (Legal_Entity__c legalEnt: records) {
            for (Usage__c usage : legalEnt.Usages__r){
                
            }
        }
        // process each batch of records
    }
    public void finish(Database.BatchableContext bc){
        // execute any post-processing operations
    }
}
